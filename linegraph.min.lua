tfm.exec.addPhysicObject(-1,400,-600,{type=0,width=10,height=10,foreground=true,friction=0.3,restitution=0,dynamic=false,miceCollision=true,groundCollision=true})function getMin(a)local b=a[1]for c,d in ipairs(a)do if d<b then b=d end end;return b end;function getMax(a)local e=a[1]for c,d in ipairs(a)do if d>e then e=d end end;return e end;function map(a,f)local res={}for c,d in pairs(a)do res[c]=f(d)end;return res end;function range(g,h,i)res={}for j=g,h,i do table.insert(res,j)end;return res end;function invertY(k)return 400-k end;local l={}l.__index=l;l.__joints=10000;setmetatable(l,{__call=function(m,...)return m.new(...)end})function l.new(n,o,k,p,q,r,s)local self=setmetatable({},l)self.id=n;self.x=o;self.y=k;self.w=p;self.h=q;self:setData(r,s)self.showing=false;self.joints=l.__joints;l.__joints=l.__joints+10000;return self end;function l:getId()return self.id end;function l:getDimension()return{x=self.x,y=self.y,w=self.w,h=self.h}end;function l:getData(t)if t=="x"then return self.dataX else return self.dataY end end;function l:getMinX()return self.minX end;function l:getMaxX()return self.maxX end;function l:getMinY()return self.minY end;function l:getMaxY()return self.maxY end;function l:getXRange()return self.xRange end;function l:getYRange()return self.yRange end;function l:getLineColor()return self.lineColor or 0xFF6600 end;function l:getGraphColor()return{bgColor=self.bg or 0x324650,borderColor=self.border or 0x212F36}end;function l:getAlpha()return self.alpha or 1 end;function l:isFixed()return not not self.fixed end;function l:getLineWidth()return self.lWidth or 0.3 end;function l:show()ui.addTextArea(10000+self.id,"",nil,self.x,self.y,self.w,self.h,self.bg,self.border,self.alpha or 0.5,self.fixed)ui.addTextArea(11000+self.id,"<b>["..math.floor(self.minX)..", "..math.floor(self.minY).."]</b>",nil,self.x-15,self.y+self.h+5,50,50,nil,nil,0,self.fixed)ui.addTextArea(12000+self.id,"<b>"..math.ceil(self.maxX).."</b>",nil,self.x+self.w+10,self.y+self.h+5,50,50,nil,nil,0,self.fixed)ui.addTextArea(13000+self.id,"<b>"..math.ceil(self.maxY).."</b>",nil,self.x-15,self.y-10,50,50,nil,nil,0,self.fixed)ui.addTextArea(14000+self.id,"<b>"..math.ceil((self.maxX+self.minX)/2).."</b>",nil,self.x+self.w/2,self.y+self.h+5,50,50,nil,nil,0,self.fixed)ui.addTextArea(15000+self.id,"<br><br><b>"..math.ceil((self.maxY+self.minY)/2).."</b>",nil,self.x-15,self.y+(self.h-self.y)/2,50,50,nil,nil,0,self.fixed)local u=self.joints;local v=self.w/self.xRange;local w=self.h/self.yRange;for x=1,#self.dataX,1 do tfm.exec.addJoint(self.id+u,-1,-1,{type=0,point1=math.floor(self.dataX[x]*v+self.x-self.minX*v)..","..math.floor(invertY(self.dataY[x]*w)+self.y-invertY(self.h)+self.minY*w),point2=math.floor((self.dataX[x+1]or self.dataX[x])*v+self.x-self.minX*v)..","..math.floor(invertY((self.dataY[x+1]or self.dataY[x])*w)+self.y-invertY(self.h)+self.minY*w),damping=0.2,line=self.lWidth or 3,color=self.lineColor or 0xFF6600,alpha=self.alpha or 1,foreground=true})u=u+1 end;self.showing=true end;function l:setLineColor(y)self.lineColor=y end;function l:setGraphColor(z,A)self.bg=z;self.border=A end;function l:setAlpha(B)self.alpha=B end;function l:setFixedPosition(C)self.fixed=C end;function l:setLineWidth(D)self.lWidth=D end;function l:resize(p,q)self.w=p;self.h=q end;function l:move(o,k)self.x=o;self.y=k end;function l:setData(E,F)if#E~=#F then error("Expected same number of data for both axis")end;self.dataX=E;self.dataY=F;self.minX=getMin(self.dataX)self.minY=getMin(self.dataY)self.maxX=getMax(self.dataX)self.maxY=getMax(self.dataY)self.xRange=self.maxX-self.minX;self.yRange=self.maxY-self.minY end;function l:hide()for n=10000,16000,1000 do ui.removeTextArea(n+self.id)end;for x=self.joints,self.joints+#self.dataX,1 do tfm.exec.removeJoint(x)end;self.showing=false end;LineChart = l
