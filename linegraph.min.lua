local a='0123456789abcdef'local function b(c)local d=''while c>0 do local e=math.fmod(c,16)d=string.sub(a,e+1,e+1)..d;c=math.floor(c/16)end;return string.upper(d==''and'0'or d)end;local function f(g)local h=g[1]for i=1,#g do i=g[i]if i<h then h=i end end;return h end;local function j(g)local k=g[1]for i=1,#g do i=g[i]if i>k then k=i end end;return k end;local function l(g,m)local n={}for o,i in next,g do n[o]=m(i)end;return n end;local function p(q,r,s)local t=table.insert;local n={}for u=q,r,s do t(n,u)end;return n end;local function v(w)return 400-w end;local Series={}Series.__index=Series;setmetatable(Series,{__call=function(y,...)return y.new(...)end})function Series.new(z,A,B,C)assert(#z==#A,"LineChartxpected same number of data for both axis")local self=setmetatable({},Series)self.name=B;self:setData(z,A)self.col=C or math.random(0x000000,0xFFFFFF)return self end;function Series:getName()return self.name end;function Series:getDX()return self.dx end;function Series:getDY()return self.dy end;function Series:getColor()return self.col end;function Series:getMinX()return self.minX end;function Series:getMinY()return self.minY end;function Series:getMaxX()return self.maxX end;function Series:getMaxY()return self.maxY end;function Series:getDataLength()return#self.dx end;function Series:getLineWidth()return self.lWidth or 3 end;function Series:setName(B)self.name=B end;function Series:setData(z,A)self.dx=z;self.dy=A;self.minX=f(z)self.minY=f(A)self.maxX=j(z)self.maxY=j(A)end;function Series:setColor(C)self.col=C end;function Series:setLineWidth(D)self.lWidth=D end;local LineChart={}LineChart.__index=LineChart;LineChart._joints=10000;setmetatable(LineChart,{__call=function(y,...)return y.new(...)end})function LineChart.init()tfm.exec.addPhysicObject(-1,0,0,{type=14,miceCollision=false,groundCollision=false})end;function LineChart.new(F,G,w,D,H)local self=setmetatable({},LineChart)self.id=F;self.x=G;self.y=w;self.w=D;self.h=H;self.showing=false;self.joints=LineChart._joints;LineChart._joints=LineChart._joints+10000;self.series={}return self end;function LineChart:getId()return self.id end;function LineChart:getDimension()return{x=self.x,y=self.y,w=self.w,h=self.h}end;function LineChart:getData(I)if I=="x"then return self.dataX else return self.dataY end end;function LineChart:getMinX()return self.minX end;function LineChart:getMaxX()return self.maxX end;function LineChart:getMinY()return self.minY end;function LineChart:getMaxY()return self.maxY end;function LineChart:getXRange()return self.xRange end;function LineChart:getYRange()return self.yRange end;function LineChart:getGraphColor()return{bgColor=self.bg or 0x324650,borderColor=self.border or 0x212F36}end;function LineChart:getAlpha()return self.alpha or 0.5 end;function LineChart:isShowing()return self.showing end;function LineChart:getDataLength()local J=0;for K,d in next,self.series do J=J+d:getDataLength()end;return J end;function LineChart:show()self:refresh()local L,M=math.floor,math.ceil;ui.addTextArea(10000+self.id,"",nil,self.x,self.y,self.w,self.h,self.bg,self.border,self:getAlpha(),true)ui.addTextArea(11000+self.id,"<b>["..L(self.minX)..", "..L(self.minY).."]</b>",nil,self.x-15,self.y+self.h+5,50,50,nil,nil,0,true)ui.addTextArea(12000+self.id,"<b>"..M(self.maxX).."</b>",nil,self.x+self.w+10,self.y+self.h+5,50,50,nil,nil,0,true)ui.addTextArea(13000+self.id,"<b>"..M(self.maxY).."</b>",nil,self.x-15,self.y-10,50,50,nil,nil,0,true)ui.addTextArea(14000+self.id,"<b>"..M((self.maxX+self.minX)/2).."</b>",nil,self.x+self.w/2,self.y+self.h+5,50,50,nil,nil,0,true)ui.addTextArea(15000+self.id,"<br><br><b>"..M((self.maxY+self.minY)/2).."</b>",nil,self.x-15,self.y+(self.h-self.y)/2,50,50,nil,nil,0,true)local N=self.joints;local O=self.w/self.xRange;local P=self.h/self.yRange;for F,Q in next,self.series do for R=1,Q:getDataLength(),1 do tfm.exec.addJoint(self.id+N,-1,-1,{type=0,point1=L(Q:getDX()[R]*O+self.x-self.minX*O)..","..L(v(Q:getDY()[R]*P)+self.y-v(self.h)+self.minY*P),point2=L((Q:getDX()[R+1]or Q:getDX()[R])*O+self.x-self.minX*O)..","..L(v((Q:getDY()[R+1]or Q:getDY()[R])*P)+self.y-v(self.h)+self.minY*P),damping=0.2,line=Q:getLineWidth(),color=Q:getColor(),alpha=1,foreground=true})N=N+1 end end;self.showing=true end;function LineChart:setGraphColor(S,T)self.bg=S;self.border=T end;function LineChart:setAlpha(U)self.alpha=U end;function LineChart:addSeries(Q)table.insert(self.series,Q)self:refresh()end;function LineChart:removeSeries(B)for u=1,#self.series do if self.series[u]:getName()==B then table.remove(self.series,u)break end end;self:refresh()end;function LineChart:refresh()self.minX,self.minY,self.maxX,self.maxY=nil;for o,d in next,self.series do self.minX=math.min(d:getMinX(),self.minX or d:getMinX())self.minY=math.min(d:getMinY(),self.minY or d:getMinY())self.maxX=math.max(d:getMaxX(),self.maxX or d:getMaxX())self.maxY=math.max(d:getMaxY(),self.maxY or d:getMaxY())end;self.xRange=self.maxX-self.minX;self.yRange=self.maxY-self.minY end;function LineChart:resize(D,H)self.w=D;self.h=H end;function LineChart:move(G,w)self.x=G;self.y=w end;function LineChart:hide()for F=10000,17000,1000 do ui.removeTextArea(F+self.id)end;for R=self.joints,self.joints+self:getDataLength(),1 do tfm.exec.removeJoint(R)end;self.showing=false end;function LineChart:showLabels(V)if V or V==nil then local W=""for K,Q in next,self.series do W=W.."<font color='#"..b(Q:getColor()).."'> â–‰<b> "..Q:getName().."</b></font><br>"end;ui.addTextArea(16000+self.id,W,nil,self.x+self.w+15,self.y,80,18*#self.series,self:getGraphColor().bgColor,self:getGraphColor().borderColor,self:getAlpha(),true)else ui.removeTextArea(16000+self.id,nil)end end;num2hex=b;getMin=f;getMax=j;map=l;range=p;invertY=v;
