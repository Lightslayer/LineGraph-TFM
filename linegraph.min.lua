tfm.exec.addPhysicObject(-1,400,-600,{type=0,width=10,height=10,foreground=true,friction=0.3,restitution=0,dynamic=false,miceCollision=true,groundCollision=true})function getMin(a)local b=a[1]for c,d in ipairs(a)do if d<b then b=d end end;return b end;function getMax(a)local e=a[1]for c,d in ipairs(a)do if d>e then e=d end end;return e end;function map(a,f)local g={}for c,d in pairs(a)do g[c]=f(d)end;return g end;function invertY(h)return 400-h end;local LineChart={}LineChart.__index=LineChart;LineChart.__joints=10000;setmetatable(LineChart,{__call=function(j,...)return j.new(...)end})function LineChart.new(k,l,h,m,n,o,p)local self=setmetatable({},LineChart)self.id=k;self.x=l;self.y=h;self.w=m;self.h=n;self:setData(o,p)self.showing=false;self.joints=LineChart.__joints;LineChart.__joints=LineChart.__joints+10000;return self end;function LineChart:getId()return self.id end;function LineChart:getDimension()return{x=self.x,y=self.y,w=self.w,h=self.h}end;function LineChart:getData(q)if q=="x"then return self.dataX else return self.dataY end end;function LineChart:getMinX()return self.minX end;function LineChart:getMaxX()return self.maxX end;function LineChart:getMinY()return self.minY end;function LineChart:getMaxY()return self.maxY end;function LineChart:getXRange()return self.xRange end;function LineChart:getYRange()return self.yRange end;function LineChart:getLineColor()return self.lineColor or 0xFF6600 end;function LineChart:getGraphColor()return{bgColor=self.bg or 0x324650,borderColor=self.border or 0x212F36}end;function LineChart:getAlpha()return self.alpha or 1 end;function LineChart:isFixed()return not not self.fixed end;function LineChart:getLineWidth()return self.lWidth or 0.3 end;function LineChart:show()ui.addTextArea(10000+self.id,"",nil,self.x,self.y,self.w,self.h,self.bg,self.border,self.alpha or 0.5,self.fixed)ui.addTextArea(11000+self.id,"<b>["..math.floor(self.minX)..", "..math.floor(self.minY).."]</b>",nil,self.x-15,self.y+self.h+5,50,50,nil,nil,0,self.fixed)ui.addTextArea(12000+self.id,"<b>"..math.ceil(self.maxX).."</b>",nil,self.x+self.w+10,self.y+self.h+5,50,50,nil,nil,0,self.fixed)ui.addTextArea(13000+self.id,"<b>"..math.ceil(self.maxY).."</b>",nil,self.x-15,self.y-10,50,50,nil,nil,0,self.fixed)ui.addTextArea(14000+self.id,"<b>"..math.ceil((self.maxX+self.minX)/2).."</b>",nil,self.x+self.w/2,self.y+self.h+5,50,50,nil,nil,0,self.fixed)ui.addTextArea(15000+self.id,"<br><br><b>"..math.ceil((self.maxY+self.minY)/2).."</b>",nil,self.x-15,self.y+(self.h-self.y)/2,50,50,nil,nil,0,self.fixed)local r=self.joints;local s=self.w/self.xRange;local t=self.h/self.yRange;for u=1,#self.dataX,1 do tfm.exec.addJoint(self.id+r,-1,-1,{type=0,point1=math.floor(self.dataX[u]*s+self.x-self.minX*s)..","..math.floor(invertY(self.dataY[u]*t)+self.y-self.h+self.minY*t),point2=math.floor((self.dataX[u+1]or self.dataX[u])*s+self.x-self.minX*s)..","..math.floor(invertY((self.dataY[u+1]or self.dataY[u])*t)+self.y-self.h+self.minY*t),damping=0.2,line=self.lWidth or 3,color=self.lineColor or 0xFF6600,alpha=self.alpha or 1,foreground=true})r=r+1 end;self.showing=true end;function LineChart:setLineColor(v)self.lineColor=v end;function LineChart:setGraphColor(w,x)self.bg=w;self.border=x end;function LineChart:setAlpha(y)self.alpha=y end;function LineChart:setFixedPosition(z)self.fixed=z end;function LineChart:setLineWidth(A)self.lWidth=A end;function LineChart:resize(m,n)self.w=m;self.h=n end;function LineChart:move(l,h)self.x=l;self.y=h end;function LineChart:setData(B,C)if#B~=#C then error("Ex[ected same number of data for both axis")end;self.dataX=B;self.dataY=C;self.minX=getMin(self.dataX)self.minY=getMin(self.dataY)self.maxX=getMax(self.dataX)self.maxY=getMax(self.dataY)self.xRange=self.maxX-self.minX;self.yRange=self.maxY-self.minY end;function LineChart:hide()for k=10000,16000,1000 do ui.removeTextArea(k+self.id)end;for u=self.joints,self.joints+#self.dataX,1 do tfm.exec.removeJoint(u)end;self.showing=false end
