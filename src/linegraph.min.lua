local a,b;local c='0123456789abcdef'local function d(e)local f=''while e>0 do local g=math.fmod(e,16)f=string.sub(c,g+1,g+1)..f;e=math.floor(e/16)end;return string.upper(f==''and'0'or f)end;local function h(i)local j=i[1]for k=1,#i do k=i[k]if k<j then j=k end end;return j end;local function l(i)local m=i[1]for k=1,#i do k=i[k]if k>m then m=k end end;return m end;local function n(i,o)local p={}for q,k in next,i do p[q]=o(k)end;return p end;local function r(s,t,u)local v=table.insert;local p={}for w=s,t,u do v(p,w)end;return p end;local function x(y)return 400-y end;a={}a.__index=a;setmetatable(a,{__call=function(z,...)return z.new(...)end})function a.new(A,B,C,D)assert(#A==#B,"Expected same number of data for both axis")local self=setmetatable({},a)self.name=C;self:setData(A,B)self.col=D or math.random(0x000000,0xFFFFFF)return self end;function a:getName()return self.name end;function a:getDX()return self.dx end;function a:getDY()return self.dy end;function a:getColor()return self.col end;function a:getMinX()return self.minX end;function a:getMinY()return self.minY end;function a:getMaxX()return self.maxX end;function a:getMaxY()return self.maxY end;function a:getDataLength()return#self.dx end;function a:getLineWidth()return self.lWidth or 3 end;function a:setName(C)self.name=C end;function a:setData(A,B)self.dx=A;self.dy=B;self.minX=h(A)self.minY=h(B)self.maxX=l(A)self.maxY=l(B)end;function a:setColor(D)self.col=D end;function a:setLineWidth(E)self.lWidth=E end;b={}b.__index=b;b._joints=10000;setmetatable(b,{__call=function(z,...)return z.new(...)end})function b.init()tfm.exec.addPhysicObject(-1,0,0,{type=14,miceCollision=false,groundCollision=false})end;function b.new(F,G,y,E,H)local self=setmetatable({},b)self.id=F;self.x=G;self.y=y;self.w=E;self.h=H;self.showing=false;self.joints=b._joints;b._joints=b._joints+10000;self.series={}return self end;function b:getId()return self.id end;function b:getDimension()return{x=self.x,y=self.y,w=self.w,h=self.h}end;function b:getMinX()return self.minX end;function b:getMaxX()return self.maxX end;function b:getMinY()return self.minY end;function b:getMaxY()return self.maxY end;function b:getXRange()return self.xRange end;function b:getYRange()return self.yRange end;function b:getGraphColor()return{bgColor=self.bg or 0x324650,borderColor=self.border or 0x212F36}end;function b:getAlpha()return self.alpha or 0.5 end;function b:isShowing()return self.showing end;function b:getDataLength()local I=0;for J,f in next,self.series do I=I+f:getDataLength()end;return I end;function b:show()self:refresh()local K,L=math.floor,math.ceil;ui.addTextArea(10000+self.id,"",nil,self.x,self.y,self.w,self.h,self.bg,self.border,self:getAlpha(),true)ui.addTextArea(11000+self.id,"<b>["..K(self.minX)..", "..K(self.minY).."]</b>",nil,self.x-15,self.y+self.h+5,50,50,nil,nil,0,true)ui.addTextArea(12000+self.id,"<b>"..L(self.maxX).."</b>",nil,self.x+self.w+10,self.y+self.h+5,50,50,nil,nil,0,true)ui.addTextArea(13000+self.id,"<b>"..L(self.maxY).."</b>",nil,self.x-15,self.y-10,50,50,nil,nil,0,true)ui.addTextArea(14000+self.id,"<b>"..L((self.maxX+self.minX)/2).."</b>",nil,self.x+self.w/2,self.y+self.h+5,50,50,nil,nil,0,true)ui.addTextArea(15000+self.id,"<br><br><b>"..L((self.maxY+self.minY)/2).."</b>",nil,self.x-15,self.y+(self.h-self.y)/2,50,50,nil,nil,0,true)local M=self.joints;local N=self.w/self.xRange;local O=self.h/self.yRange;for F,P in next,self.series do for Q=1,P:getDataLength(),1 do tfm.exec.addJoint(self.id+M,-1,-1,{type=0,point1=K(P:getDX()[Q]*N+self.x-self.minX*N)..","..K(x(P:getDY()[Q]*O)+self.y-x(self.h)+self.minY*O),point2=K((P:getDX()[Q+1]or P:getDX()[Q])*N+self.x-self.minX*N)..","..K(x((P:getDY()[Q+1]or P:getDY()[Q])*O)+self.y-x(self.h)+self.minY*O),damping=0.2,line=P:getLineWidth(),color=P:getColor(),alpha=1,foreground=true})M=M+1 end end;self.showing=true end;function b:setGraphColor(R,S)self.bg=R;self.border=S end;function b:setAlpha(T)self.alpha=T end;function b:addSeries(P)table.insert(self.series,P)self:refresh()end;function b:removeSeries(C)for w=1,#self.series do if self.series[w]:getName()==C then table.remove(self.series,w)break end end;self:refresh()end;function b:refresh()self.minX,self.minY,self.maxX,self.maxY=nil;for q,f in next,self.series do self.minX=math.min(f:getMinX(),self.minX or f:getMinX())self.minY=math.min(f:getMinY(),self.minY or f:getMinY())self.maxX=math.max(f:getMaxX(),self.maxX or f:getMaxX())self.maxY=math.max(f:getMaxY(),self.maxY or f:getMaxY())end;self.xRange=self.maxX-self.minX;self.yRange=self.maxY-self.minY end;function b:resize(E,H)self.w=E;self.h=H end;function b:move(G,y)self.x=G;self.y=y end;function b:hide()for F=10000,17000,1000 do ui.removeTextArea(F+self.id)end;for Q=self.joints,self.joints+self:getDataLength(),1 do tfm.exec.removeJoint(Q)end;self.showing=false end;function b:showLabels(U)if U or U==nil then local V=""for J,P in next,self.series do V=V.."<font color='#"..d(P:getColor()).."'> â–‰<b> "..P:getName().."</b></font><br>"end;ui.addTextArea(16000+self.id,V,nil,self.x+self.w+15,self.y,80,18*#self.series,self:getGraphColor().bgColor,self:getGraphColor().borderColor,self:getAlpha(),true)else ui.removeTextArea(16000+self.id,nil)end end;Series=a;LineChart=b
